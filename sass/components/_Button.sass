// Buttons
//
// The Button component can be used to style links, `button` elements, and
// button-style inputs.
//
// The base Button class does something you may not expect: it removes all
// styles, including browser defaults. This enables you to wrap arbitrary
// content inside a `button` (or `a`) element without changing its appearance.
// Then you can attach a click handler to the `button` element, rather than
// attaching a click handler to some other element like a `div`, which is bad
// for accessibility.

@mixin reset-button
  display: inline
  background: transparent
  -webkit-appearance: none
  -moz-appearance: none
  -webkit-tap-highlight-color: transparent
  outline: none
  border: none
  padding: 0
  margin: 0
  overflow: visible
  text-decoration: none
  color: inherit
  text-align: start
  white-space: normal

  &:hover
    cursor: pointer

.Button
  +reset-button

  position: relative

  &:after, &:before
    content: ""
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: 100%

  &--callToAction
    +font-family(header)
    +font-size(h2)
    position: relative
    text-transform: uppercase
    text-align: center
    border-bottom: rhythm(1/5) solid
    margin-bottom: rhythm(1/4)

  &--primaryMenuLink, &--secondaryMenuLink
    +font-family(header)
    +font-size(h1)
    position: relative
    text-transform: capitalize
    line-height: 1.125
    border-top: 10px solid transparent
    border-bottom: 10px solid transparent
    margin: 0 rhythm(-1/2)
    margin-bottom: rhythm(1/4)
    padding: 0 rhythm(1/2)
    padding-top: rhythm(1/4)

    &.active
      border-bottom: 10px solid theme-color(yellow)
    &:hover
      background-color: theme-color(yellow)
      color: white 

  &--secondaryMenuLink
    +font-size(h2)
